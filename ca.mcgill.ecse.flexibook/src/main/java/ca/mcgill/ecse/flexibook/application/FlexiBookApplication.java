/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package ca.mcgill.ecse.flexibook.application;

import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;


import ca.mcgill.ecse.flexibook.model.FlexiBook;
import ca.mcgill.ecse.flexibook.model.User;
import ca.mcgill.ecse.flexibook.persistence.FlexiBookPersistence;
import ca.mcgill.ecse.flexibook.view.LandingPage;


public class FlexiBookApplication {
	public static final boolean LOAD_PERSISTENCE = true;
	private static FlexiBook flexiBook;
    private static User currentUser;
    private static List<JFrame> detachedPages = new ArrayList<>();
	
    public String getGreeting() {
        return "Hello world.";
    }

    public static void main(String[] args) {
        // System.out.println(new FlexiBookApplication().getGreeting());
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LandingPage().setVisible(true);
            }
        });
    }
    
    public static FlexiBook getFlexiBook() {
    	if (flexiBook == null) {
    		if (LOAD_PERSISTENCE) {
    			flexiBook = FlexiBookPersistence.load();
    		} else {
    			flexiBook = new FlexiBook();
    		}
    	}
    	
    	return flexiBook;
    }
    
    public static boolean hasCurrentUser() {
    	return currentUser != null;
    }
    
    public static User getCurrentUser() {
    	return currentUser;
    }
    
    public static void setCurrentUser(User user) {
    	if (user == null) {
    		throw new IllegalArgumentException("Current user cannot be set to null"); // use #unsetCurrentUser
    	}
    	currentUser = user;
    }
    
    public static void unsetCurrentUser() {
    	currentUser = null;
    }
    
    public static List<JFrame> getDetachedPages() {
    	return detachedPages;
    }
    
    public static void addDetachedPage(JFrame viewCalendarPage) {
    	detachedPages.add(viewCalendarPage);
    }
    
    public static void removeDetachedPage(JFrame viewCalendarPage) {
    	detachedPages.remove(viewCalendarPage);
    }
    
    public static void clearDetachedPages() {
    	detachedPages.clear();
    }   
}
